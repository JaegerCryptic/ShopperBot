name: ShoppingBot CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10.11]

    env:  # Environment Variables
      API_KEY: ${{ secrets.API_KEY }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # Caching dependencies
    - name: Cache pip packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools
        pip install -e .

    # Browser Automation Testing
    - name: Setup browser driver (e.g., ChromeDriver)
      run: |
        sudo apt-get update
        sudo apt-get install -y chromium-chromedriver
        sudo ln -s /usr/lib/chromium-browser/chromedriver /usr/bin

    - name: Format code with Black
      run: black --check .

    - name: Lint with pylint
      run: pylint $(git ls-files '*.py')

    - name: Security scan with Bandit
      run: |
        pip install bandit
        bandit -r .

    - name: Run tests with coverage
      run: |
        pip install coverage
        coverage run -m unittest discover tests

    - name: Report coverage
      run: coverage report

    # Dockerization
    - name: Build Docker image
      run: docker build . -t shoppingbot:latest

    - name: Run Docker container
      run: docker run shoppingbot:latest <some-command>

